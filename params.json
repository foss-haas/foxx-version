{"name":"Vworp","tagline":"`npm version` for timelords.","body":"# Synopsis\r\n\r\n**vworp** is a tool for bumping the version number of projects and automagically creating git commits and tags for each version.\r\n\r\nBasically, it's a substitute for `npm version` that supports updating multiple files and can be used in projects that don't have a `package.json`.\r\n\r\n[![license - MIT](https://img.shields.io/npm/l/vworp.svg)](http://foss-haas.mit-license.org) [![Dependencies](https://img.shields.io/david/foss-haas/vworp.svg)](https://david-dm.org/foss-haas/vworp)\r\n\r\n[![NPM status](https://nodei.co/npm/vworp.png?compact=true)](https://www.npmjs.com/package/vworp)\r\n\r\n[![Codacy rating](https://img.shields.io/codacy/f3bd7f31c1f9436fa747f04c4937aa52.svg)](https://www.codacy.com/public/pluma/vworp)\r\n\r\n# CLI\r\n\r\n```sh\r\n$ vworp --help\r\n\r\nModify a project's version number.\r\nUsage: fworp <options> [ <newversion> | major | minor | patch | prerelease |\r\n  prepatch | preminor | premajor ]\r\n\r\nOptions:\r\n  --file, -f      Filename. This can be specified multiple times.\r\n                                                       [default: \"package.json\"]\r\n  --nogit, -n     Don't create a commit and tag in git.                         \r\n  --version       Show the version number of fworp.                      \r\n  --help, -h, -?  Show this help information. \r\n```\r\n\r\n# API\r\n\r\n```js\r\nvar vworp = require('vworp');\r\nvworp('1.3.0', false, ['package.json', 'bower.json', 'component.json'])\r\n.then(\r\n  version => console.log('New version:', version),\r\n  err => console.error('Error:', err.message)\r\n);\r\n```\r\n\r\n## vworp([newversion[, noGit[, filename]]])\r\n\r\nBumps/sets the version number of the file in `filename` (default: `\"package.json\"`) to `newversion`.\r\n\r\nIf `noGit` is not set to `true`, modifying the version number will fail if the current git workspace is not empty and a new commit tagged with the version number (e.g. `v1.0.0`) will be created on success. If not in a git workspace, the option will have no effect.\r\n\r\nIf `newversion` is not set, the version number will not be modified and the promise will resolve to the current version number of the file or `\"0.0.0\"` if the file does not contain a `version` property. Otherwise the promise will resolve to the new version number.\r\n\r\nIf any errors occur, the promise will be rejected with that error.\r\n\r\n# License\r\n\r\nThe MIT/Expat license. For more information, see http://foss-haas.mit-license.org/ or the accompanying [LICENSE](https://github.com/foss-haas/vworp/blob/master/LICENSE) file.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}